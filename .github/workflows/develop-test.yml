name: PHP Unit Test

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  php_unit:
    name: php unit test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [7.3, 7.4]
    services:
      mysql:
        image: mysql:5.7
        ports:
          - 3306
        env:
          MYSQL_ROOT_PASSWORD: wordpress
          MYSQL_DATABASE: wordpress
          MYSQL_USER: wordpress
          MYSQL_PASSWORD: wordpress
    steps:
    - uses: actions/checkout@v2

    # get the node version from the .node-version file
    - name: Read .node-version
      run: echo "##[set-output name=NODEVERSION;]$(cat .node-version)"
      id: nodenv

    # setup node based on the version from the .node-version file, fetched in the previous step
    - name: Setup Node.js (.node-version)
      uses: actions/setup-node@v1
      with:
        node-version: "${{ steps.nodenv.outputs.NODEVERSION }}"

    - name: Cache multiple paths
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php${{ matrix.php }}-${{ hashFiles('**/composer.lock') }}
    - name: Setup PHP ${{ matrix.php }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
    - name: install npm scripts
      run: npm install
    - name: install Composer Package
      run: composer install
    - name: Install WP-CLI
      run: |
        curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
        chmod +x wp-cli.phar
        mv wp-cli.phar /usr/local/bin/wp

    # dist の中で build は実行している
    - name: Build and Dist
      run: npm run dist

    # PHPUnit
    - name: Run @wordpress/env
      run: npx wp-env start
    - name: PHP Unit Test
      run: npm run phpunit

    # Deploy test server
    - name: Deploy to test server [ Deprecated ]
      uses: burnett01/rsync-deployments@4.1
      with:
        switches: -avzr
        path: /dist/vk-blocks-pro/
        remote_path: /home/vs4/www/vk-block-test/wp-content/plugins/vk-blocks-pro/
        remote_host: ${{ secrets.DEPLOY_HOST_VS4 }}
        remote_port: ${{ secrets.DEPLOY_PORT_VS4 }}
        remote_user: ${{ secrets.DEPLOY_USER_VS4 }}
        remote_key: ${{ secrets.DEPLOY_KEY_VS4 }}
