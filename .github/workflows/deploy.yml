# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Deploy to VWS

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
env:
  plugin_name: vk-blocks-pro

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    # get the node version from the .node-version file
    - name: Read .node-version
      run: echo "##[set-output name=NODEVERSION;]$(cat .node-version)"
      id: nodenv

    # setup node based on the version from the .node-version file, fetched in the previous step
    - name: Setup Node.js (.node-version)
      uses: actions/setup-node@v1
      with:
        node-version: "${{ steps.nodenv.outputs.NODEVERSION }}"

    - run: |
        npm install
        npm install -g @wordpress/env
        wp-env start
    - run: npm run build
    - run: npx gulp dist
    - run: cd dist/ && zip -r ${{ env.plugin_name }}.zip ${{ env.plugin_name }}/ && mv ${{ env.plugin_name }}.zip ${GITHUB_WORKSPACE}

    - name: rsync deployments
      uses: burnett01/rsync-deployments@4.1
      with:
        switches: -avzr
        path: ${{ env.plugin_name }}.zip
        remote_path: /home/vs2/vektor-inc.co.jp/public_html/vws/wp-content/themes/lightning-pro-child-vws/updates/packages/
        remote_host: ${{ secrets.DEPLOY_HOST_VWS }}
        remote_port: ${{ secrets.DEPLOY_PORT_VWS }}
        remote_user: ${{ secrets.DEPLOY_USER_VWS }}
        remote_key: ${{ secrets.DEPLOY_KEY_VWS }}
